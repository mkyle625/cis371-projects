{"ast":null,"code":"import { createDecorator } from 'vue-class-component';\nimport { applyMetadata } from '../helpers/metadata';\n/**\n * decorator of a synced prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param options the options for the synced prop\n * @return PropertyDecorator | void\n */\n\nexport function PropSync(propName, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return function (target, key) {\n    applyMetadata(options, target, key);\n    createDecorator(function (componentOptions, k) {\n      ;\n      (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n      (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n        get: function get() {\n          return this[propName];\n        },\n        set: function set(value) {\n          this.$emit(\"update:\" + propName, value);\n        }\n      };\n    })(target, key);\n  };\n}","map":{"version":3,"sources":["/Users/kylemishanec/Documents/GitHub/cis371-projects/project-4/node_modules/vue-property-decorator/lib/decorators/PropSync.js"],"names":["createDecorator","applyMetadata","PropSync","propName","options","target","key","componentOptions","k","props","computed","get","set","value","$emit"],"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4BC,OAA5B,EAAqC;AACxC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,SAAO,UAAUC,MAAV,EAAkBC,GAAlB,EAAuB;AAC1BL,IAAAA,aAAa,CAACG,OAAD,EAAUC,MAAV,EAAkBC,GAAlB,CAAb;AACAN,IAAAA,eAAe,CAAC,UAAUO,gBAAV,EAA4BC,CAA5B,EAA+B;AAC3C;AACA,OAACD,gBAAgB,CAACE,KAAjB,KAA2BF,gBAAgB,CAACE,KAAjB,GAAyB,EAApD,CAAD,EAA0DN,QAA1D,IAAsEC,OAAtE;AACA,OAACG,gBAAgB,CAACG,QAAjB,KAA8BH,gBAAgB,CAACG,QAAjB,GAA4B,EAA1D,CAAD,EAAgEF,CAAhE,IAAqE;AACjEG,QAAAA,GAAG,EAAE,eAAY;AACb,iBAAO,KAAKR,QAAL,CAAP;AACH,SAHgE;AAIjES,QAAAA,GAAG,EAAE,aAAUC,KAAV,EAAiB;AAClB,eAAKC,KAAL,CAAW,YAAYX,QAAvB,EAAiCU,KAAjC;AACH;AANgE,OAArE;AAQH,KAXc,CAAf,CAWGR,MAXH,EAWWC,GAXX;AAYH,GAdD;AAeH","sourcesContent":["import { createDecorator } from 'vue-class-component';\nimport { applyMetadata } from '../helpers/metadata';\n/**\n * decorator of a synced prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param options the options for the synced prop\n * @return PropertyDecorator | void\n */\nexport function PropSync(propName, options) {\n    if (options === void 0) { options = {}; }\n    return function (target, key) {\n        applyMetadata(options, target, key);\n        createDecorator(function (componentOptions, k) {\n            ;\n            (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n            (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n                get: function () {\n                    return this[propName];\n                },\n                set: function (value) {\n                    this.$emit(\"update:\" + propName, value);\n                },\n            };\n        })(target, key);\n    };\n}\n"]},"metadata":{},"sourceType":"module"}