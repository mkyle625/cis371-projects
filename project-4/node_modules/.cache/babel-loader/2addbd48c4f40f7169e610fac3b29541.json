{"ast":null,"code":"import { createDecorator } from 'vue-class-component';\nimport { applyMetadata } from '../helpers/metadata';\n/**\n * decorator of synced model and prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param  event event name\n * @param options options\n * @return PropertyDecorator\n */\n\nexport function ModelSync(propName, event, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return function (target, key) {\n    applyMetadata(options, target, key);\n    createDecorator(function (componentOptions, k) {\n      ;\n      (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n      componentOptions.model = {\n        prop: propName,\n        event: event || k\n      };\n      (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n        get: function get() {\n          return this[propName];\n        },\n        set: function set(value) {\n          // @ts-ignore\n          this.$emit(event, value);\n        }\n      };\n    })(target, key);\n  };\n}","map":{"version":3,"sources":["/Users/kylemishanec/Documents/GitHub/cis371-projects/project-4/node_modules/vue-property-decorator/lib/decorators/ModelSync.js"],"names":["createDecorator","applyMetadata","ModelSync","propName","event","options","target","key","componentOptions","k","props","model","prop","computed","get","set","value","$emit"],"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,KAA7B,EAAoCC,OAApC,EAA6C;AAChD,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,SAAO,UAAUC,MAAV,EAAkBC,GAAlB,EAAuB;AAC1BN,IAAAA,aAAa,CAACI,OAAD,EAAUC,MAAV,EAAkBC,GAAlB,CAAb;AACAP,IAAAA,eAAe,CAAC,UAAUQ,gBAAV,EAA4BC,CAA5B,EAA+B;AAC3C;AACA,OAACD,gBAAgB,CAACE,KAAjB,KAA2BF,gBAAgB,CAACE,KAAjB,GAAyB,EAApD,CAAD,EAA0DP,QAA1D,IAAsEE,OAAtE;AACAG,MAAAA,gBAAgB,CAACG,KAAjB,GAAyB;AAAEC,QAAAA,IAAI,EAAET,QAAR;AAAkBC,QAAAA,KAAK,EAAEA,KAAK,IAAIK;AAAlC,OAAzB;AACA,OAACD,gBAAgB,CAACK,QAAjB,KAA8BL,gBAAgB,CAACK,QAAjB,GAA4B,EAA1D,CAAD,EAAgEJ,CAAhE,IAAqE;AACjEK,QAAAA,GAAG,EAAE,eAAY;AACb,iBAAO,KAAKX,QAAL,CAAP;AACH,SAHgE;AAIjEY,QAAAA,GAAG,EAAE,aAAUC,KAAV,EAAiB;AAClB;AACA,eAAKC,KAAL,CAAWb,KAAX,EAAkBY,KAAlB;AACH;AAPgE,OAArE;AASH,KAbc,CAAf,CAaGV,MAbH,EAaWC,GAbX;AAcH,GAhBD;AAiBH","sourcesContent":["import { createDecorator } from 'vue-class-component';\nimport { applyMetadata } from '../helpers/metadata';\n/**\n * decorator of synced model and prop\n * @param propName the name to interface with from outside, must be different from decorated property\n * @param  event event name\n * @param options options\n * @return PropertyDecorator\n */\nexport function ModelSync(propName, event, options) {\n    if (options === void 0) { options = {}; }\n    return function (target, key) {\n        applyMetadata(options, target, key);\n        createDecorator(function (componentOptions, k) {\n            ;\n            (componentOptions.props || (componentOptions.props = {}))[propName] = options;\n            componentOptions.model = { prop: propName, event: event || k };\n            (componentOptions.computed || (componentOptions.computed = {}))[k] = {\n                get: function () {\n                    return this[propName];\n                },\n                set: function (value) {\n                    // @ts-ignore\n                    this.$emit(event, value);\n                },\n            };\n        })(target, key);\n    };\n}\n"]},"metadata":{},"sourceType":"module"}